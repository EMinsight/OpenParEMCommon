#!/usr/bin/python3

import sys

if len(sys.argv) != 2:
    print ("usage: listErrors common|2D|3D")
    exit (1)

simulator=sys.argv[1]

if simulator != "common" and simulator != "2D" and simulator != "3D":
    print ("ERROR:",simulator,"is not a valid operation.")
    exit (1)

errorType="ERROR3"
if simulator == "2D":
   errorType="ERROR2"
if simulator == "common":
   errorType="ERROR1"

errorNumbers = []

for line in sys.stdin:
   start = line.find(errorType)
   if (start >= 0):
      errorNumbers.append(line[start+5:start+9])

errorNumbers.sort()

k=0
while k < len(errorNumbers):
   i=k+1
   while i < len(errorNumbers):
      if (errorNumbers[k] == errorNumbers[i]):
         print ("duplicate "+str(errorNumbers[k]))
      i=i+1
   k=k+1

error=int(errorNumbers[0])
k=0
while k < len(errorNumbers):
   found=False
   i=0
   while i < len(errorNumbers):
      if (int(errorNumbers[i]) == error):
         found=True
         break
      i=i+1

   if (not found):
      print ("missing "+str(error))

   error=error+1
   k=k+1

print ("last error " + errorNumbers[len(errorNumbers)-1])
print (str(len(errorNumbers)) + " error messages processed")

